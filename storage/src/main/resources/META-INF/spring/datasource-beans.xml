<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <context:property-placeholder order="1000"
                                  ignore-unresolvable="true"
                                  location="classpath:datasource-default.properties" />
    <context:property-placeholder order="0"
                                  ignore-unresolvable="true"
                                  ignore-resource-not-found="true"
                                  location="classpath:datasource.properties" />

    <!--
   	This bean should never be used except for wiring up the 'dataSource' and 'transactionManager'
   	beans below.  If you want a DataSource, use 'dataSource'.
   	-->
    <bean id="__internal_raw_dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource">
            <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                <property name="driverClassName" value="${jdbc.driverClassName}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </bean>
        </property>
        <property name="defaultAutoCommit" value="false" />
    </bean>

    <!--
   	this proxy lets clients use pure JDBC against a DataSource while implicitly participating
   	in the Spring-managed transactions.
   	-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <property name="targetDataSource" ref="__internal_raw_dataSource"/>
    </bean>

    <bean id="sql" class="groovy.sql.Sql">
        <!--
         wired with the proxy (as all applications beans should be), so it'll use
         implicitly-transactional lazy connections.  The type isn't strictly needed
         as Spring can figure it out, but it'll save it some cycles.
         -->
        <constructor-arg ref="dataSource" type="javax.sql.DataSource"/>
        <property name="enableNamedQueries" value="false" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="__internal_raw_dataSource"/>
    </bean>

</beans>
